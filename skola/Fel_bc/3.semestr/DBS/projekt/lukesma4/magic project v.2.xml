<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="http://service.felk.cvut.cz/courses/X36DBS/xml/sprojekt_html.xsl"?>
<!DOCTYPE sproject PUBLIC "-//XMLmind//DTD Sprojekt//EN"
"http://service.felk.cvut.cz/courses/X36DBS/xml/sprojekt/sprojekt.dtd">
<sproject>
  <course>
    <cname>Databázové systémy</cname>

    <code>Y36DBS</code>

    <semester>Zima 2009, sudý týden 90(zapsán v lichém, navštěvuje
    sudý)</semester>

    <seminar>Čtvrtek 14:30</seminar>
  </course>

  <author>
    <aname>Martin Lukeš</aname>

    <uname>lukesma4</uname>

    <email>lukesma4@fel.cvut.cz</email>
  </author>

  <content>
    <declaration>Prohlašuji, že jsem svou semestrální práci vypracoval
    samostatně. Všechny zdroje, ze kterých jsem čerpal, jsou uvedeny v části
    Odkazy.</declaration>

    <title>Magicové turnaje</title>

    <description>
      <title>Popis</title>

      <para>Magic je nejstarší karetní sběratelská hra. Každý rok jsou v něm
      uspořádány desítky turnajů. Databázový systém slouží k evidenci
      úspěšných balíčků ( 1 - 8. místo na turnaji), jejich složení, informace
      o turnaji, na kterém byly hrány, informacemi o jejich pilotech. Databáze
      by měla ulehčit vývoj nových a vylepšování starších archetypů. V Magicu
      vyšlo okolo 16 868 karet (karty s stejným jménem z různých edic jsou
      započítány vícekrát ). Magickový balíček na limited formáty, které
      databáze eviduje, je složen z maindecku a sideboardu. Maindeck musí
      obsahovat 60 a více karet, sideboard je složen z maximálně 15 karet.
      Maindeck označuje karty, s kterými hráč začína každou první hru.
      Sideboard je určen k vylepšení balíčku proti problematickým soupeřům v
      2., případně, třetí hře Karta jednoznačně identifikovaná svým jménem se
      v součtu může v maindecku i sideboardu vyskytovat maximálně v čtyřech
      kopiích ( existuje jedna karta, která je výjimkou z tohoto pravidla, ale
      tu tento model nebude zahrnovat). Dále pak je omezení vzhledem k daným
      formátům, ale ani tuto skutečnost nebude model zahrnovat.</para>

      <comment>
        <para>Dalším omezením v reálném světě jsou Banned list &amp; Restricted list. Banned list zakazuje hraní karty na formátu, restricted omezuje 
maximální možný počet jeích kopií  v balíčku na 1 ks. Tyto listy upravují legálnost daných karet na daném formátu a jsou aktualizované 
jednou za 3 měsíce. Vzhledem k rozsahu těchto listů  a jejich časté obměně
- viz http://www.wizards.com/Magic/TCG/Resources.aspx?x=judge/resources/
-http://www.wizards.com/Magic/TCG/Resources.aspx?x=judge/resources/sfrlegacy
nebude v modelu uvedena kontrola všech listů.
</para>
      </comment>

      <para>Každá karta má kromě jména ( primární klíč ), barvu, typ,
      vyvolávací cenu, počet kopií, které se vyskytují v sb či md. Základních
      barev je v MTG 5 - červená, zelená, bílá, modrá, černá. Dále pak
      existují i jejich kombinace a hybridní barvy, split karty - pro
      jednoduchost budou karty, které nemají jednoznačně určenu barvu označeny
      jako multicolor. Kombinace barev mohou být téměř libovolné - barvy se
      zkráceně značí podle prvního písmene anglického slova (B = black, G=
      green, R = red, W = white , U = BLUE (jediná výjimka, B už bylo
      použito). Tyto znaky zastupují také manu dané barvy v casting costu.
      Některé karty nemají barvu a jsou jsou označovány jako colorless
      (některé artefakty - donedávna všechny, landy)</para>

      <para>Každá karta má svůj typ - základní typy jsou artifact, instant,
      enchantment, land, planeswalker, creature, sorcery, artifact creature.
      Každá karta má svoji vyvolávací cenu - converted mana cost/casting cost,
      která představuje, kolik a jak barevných man (zdrojů energie) je nutné
      použít k položení karty do hry - karty bez uvdeného CC mají podle
      pravidel CC 0. Rozsah vyvolávací ceny je ohromný - začíná nulou a končí
      u 19. Samozřejmě nejsnou zastoupeny všechny kombinace barev, ale je jich
      obecně dost. Číslo v CC udává počet many libovolné barvy. CC - 2RG = dvě
      libovolné many, červená a zelená.</para>

      <para>Na každém limited turnaji se hráč zaregistruje, sepíše decklist,
      který je po odevzdání brán za závaznou podobu balíčku před první hrou.
      Decklist slouží k kontrole, jestli hráč nefixluje a nemění balíček či
      jejich části v průběhu turnaje. Každý hráč tedy může hrát jenom jeden
      balíček na jednom turnaji. Magickový zápas se hraje většinou na dva
      vítezné zápasy či do vypršení časového limitu. Deckcheck = kontrola
      balíčku se provádí před první hrou - v této chvíli musí být všechny
      karty v maindecku odděleny od karet v sideboardu a balíček musí být
      legální. V případě, že nesedí karty v decklistu s kartami v maindecku je
      udělen hráči gameloss a hráč má 20 minut na napravení tohoto svého
      pochybení. V případě zjištění nelegálnosti balíčku dostává hráč DQ
      (diskvalifikaci) z turnaje. Po odehrání první hry si může hráč vyměnit
      libovolný počet karet ze SB za karty z MD a začít třetí hru. Výměna musí
      být v počtu 1 přidaná : 1 odebraná.</para>

      <para>Turnaje se hraji ruznym systemem - jeden system hrani je single
      elimination - hraci, kteri prohrali konci v turnaji, takto se pocet
      hracu kazde kolo puli - je to vlastne play off hokejovych mistrovsti
      sveta. Double elimination - hraci, kteri jednou prohrali jsou zarazeni
      do single elimination pavouka - dve prohry znamenaji konec ve hre.
      Single i double elimination vyhrava, ten, ktery nejdele zustane v
      turnaji. Svycarsky system nevyrazuje hrace po prohre. Hrac hraje s
      nahodne vygenerovanym souperem. Za vyhru ziska tri body, za prohru 0, za
      remizu 1. Po prvnim kole spolu hraji hraci s stejnym nebo podobnym
      poctem bodu. V dalsich kolech ziskavaji body a jsou k sobe parovani
      stejnym zpusobem, ale je snaha, aby se vyvarovalo tomu, ze hrac nastoupi
      do zapasu proti souperi, proti kteremu uz hral. Kazdy turnaj je hran v
      formatu, ktery jasne vymezuje karty, s kterymi se muze hrat. Turnaje
      svycarskeho typu mivaji/mohou mit TOP 8 - po urcitem poctu kol se osm
      hracu vyda do pokracujicih boju v single elimination casti turnaje.
      Turnaje mohou mit rozhodciho, pokud maji rozhodciho, tak musi mit
      hlavniho rozhodciho, ktery je nejvyssi instanci, co se tyce pravidel,
      reseni konfliktnich situaci... Kazdy turnaj ma nejaky pocet kol, v
      kterych se hraji zapasy jeden proti jednomu. Zapasy se hraji vetsinou na
      dva vitezne, takze vysledky mohou byt (1:0, 2:0, 1:1, 2:1, 1:2, 0:1, 0:2
      ), v zapase mohou byt udeleny v prvnich kolech bye, pokud ma hrac dobre
      vysledky z jinych turnaju (vyhra v TRIALECH, vysoke hodnoceni...) - tzn
      ma automatickou vyhru. Ve hre mohou byt udeleny postihy ve forme
      warningu nebo i gamelossu.</para>

      <comment>
        <para>Warningy a gamelossy jsou evidovany u zapasu v poznamkach. </para>
      </comment>
    </description>

    <data_model>
      <title>datové schéma</title>

      <dm_picture>
        <mediaobject>
          <imageobject>
            <imagedata fileref="mtg.png" />
          </imageobject>
        </mediaobject>
      </dm_picture>

      <comment>
        <para>Kruznice v schematu - v schematu se vyskytuji 4 kruznice (smycky).

 Kruznice hrac - zapas vznikla kvuli dvoum relacim mezi entitou hrac a zapas, tyto relace vyjadruji obe
 neco jineho a neni je mozne vynechat (zapas_hr1 znazornuje, ze hrac se zucastnil zapasu jako hrac cislo jedna - zapasu se mohou zucastnit maximalne dva hraci - druha
 relace, nejmene jeden). Neni mozne znazornit lepe, ze zapasu se mohou zucastnit maximalne dva hraci a nejmene jeden.

 Vazby mezi entitam rozhodci a turnaj urcuji, 
jestli byl turnaj rizen (judgeovan) rozhodcim nebo ne. Rozdil mezi nimi je ten, ze hl_roz je u kazdeho turnaje nutny, ostatni rozhodci jsou "navic".

Treti kruznice md_obsahuje, MTG_karta, sb_obsahuje a deck vznikla, protoze  balicek je rozdelen na dve casti - main deck (md) a sideboard (sb), pokud bychom nechali jen
jen jednu relaci pro znazorneni techto dvou vztahu a misto nich zaradily atributy u entity MTG_karta, tak by vznikaly zbytecne duplicity karet, ktere by se lisily jen poctem karet v 
md ci sb, takze databaze by se nafukovala a byla mene prehledna.

Ctvrta kruznice je dusledkem kruznic minulych.</para>
      </comment>

      <dm_discussion>
        <para><link url="???"></link></para>
      </dm_discussion>
    </data_model>

    <queries>
      <title>Dotazy</title>

      <dotazy>
        <dotaz>
          <popis_dotazu>
            <para>Turnaje, ktere se konaly v Praze</para>
          </popis_dotazu>

          <relacni_algebra>Turnaj(misto_konani=Praha)</relacni_algebra>

          <sql>SELECT * 
FROM Turnaj
WHERE misto_konani='Praha';
</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Jmena a id balicku, ktere jsou modrocerne (zkratka
            UB).</para>
          </popis_dotazu>

          <relacni_algebra>(Deck(barvy = UB))[jmeno, id]
</relacni_algebra>

          <sql>SELECT jmeno, id 
FROM Deck WHERE (barvy = 'UB')</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Jmena a id balicku, ktere nejsou modrocerne (vice nez
            dvoubarevne balicky obsahujici barvy UB nejsou povazovany za
            UB).</para>
          </popis_dotazu>

          <relacni_algebra>Deck[jmeno, id] - Deck(barvy = UB)[jmeno, id]</relacni_algebra>

          <sql>(SELECT jmeno, id FROM Deck)
MINUS
(SELECT jmeno, id FROM Deck WHERE barvy = 'UB');</sql>

          <comment>
            <para>Id je vybrano kvuli rozliseni duplicitnich nazvu balicku.</para>
          </comment>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>To same pomoci NOT IN.</para>
          </popis_dotazu>

          <sql>SELECT jmeno, id 
FROM Deck
WHERE id NOT IN (
select id 
FROM deck WHERE barvy = 'UB');
</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>To same jako podminka v WHERE</para>
          </popis_dotazu>

          <sql>SELECT jmeno, id 
FROM Deck
WHERE (
barvy != 'UB');
</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Karty z maindecku balicku s id 1 i s jejich pocty.</para>
          </popis_dotazu>

          <relacni_algebra>(md_obsahuje [ karta_md_id = id ] mtg_karta ( jmeno, pocet )) [deck_md_id = 1]</relacni_algebra>

          <sql>SELECT jmeno, pocet
FROM (md_obsahuje JOIN mtg_karta ON md_obsahuje.karta_md_id = mtg_karta.id )
WHERE (md_obsahuje.deck_md_id = 1)
ORDER BY pocet;</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Karty z sideboardu balicku s id 1 i s jejich pocty.</para>
          </popis_dotazu>

          <relacni_algebra>(sb_obsahuje [ karta_sb_id = id ] mtg_karta ( jmeno, pocet )) [deck_md_id=1]</relacni_algebra>

          <sql>SELECT jmeno, pocet
FROM (sb_obsahuje JOIN mtg_karta ON sb_obsahuje.karta_sb_id = mtg_karta.id )
WHERE (sb_obsahuje.deck_sb_id = 1)
ORDER BY pocet;</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Karty z md a z sb - nerozdeleno, jestli jsou v side nebo
            main.</para>
          </popis_dotazu>

          <relacni_algebra>(md_obsahuje [ karta_md_id = id ] mtg_karta ( jmeno, pocet ) [deck_md_id = 1])  (sb_obsahuje [ karta_sb_id = id ] mtg_karta 
( jmeno, pocet )) [deck_md_id=1])</relacni_algebra>

          <sql>SELECT jmeno, pocet
FROM (md_obsahuje JOIN mtg_karta ON md_obsahuje.karta_md_id = mtg_karta.id )
WHERE (md_obsahuje.deck_md_id = 1)
   UNION
SELECT jmeno, pocet
FROM (sb_obsahuje JOIN mtg_karta on sb_obsahuje.karta_sb_id = mtg_karta.id )
WHERE (sb_obsahuje.deck_sb_id = 1);</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Kombinace barev, ktere se vyskytuji u nejmene dvou
            balicku.</para>
          </popis_dotazu>

          <relacni_algebra>d1:=deck
d2:=deck
(d1 x d2) (d1.barvy=d2.barvy AND d1.id!=d2.id) [barvy];
</relacni_algebra>

          <sql>SELECT DISTINCT d1.barvy
FROM deck d1 CROSS JOIN deck d2
WHERE (d1.id != d2.id AND d1.barvy = d2.barvy);
</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Karty, ktere jsou v side i v maindecku s jejich poctem a
            nazvem</para>
          </popis_dotazu>

          <relacni_algebra>md_obsahuje (pocet -&gt; pocet_md, karta_md_id -&gt; karta, deck_md_id as deck)* sb_obsahuje (pocet -&gt; pocet_sb, 
karta_sb_id -&gt; karta, deck_sb_id as deck)  // dodelat algebru</relacni_algebra>

          <sql>SELECT jmeno, pocet_md, pocet_sb 
FROM 
(
    SELECT pocet as pocet_md, karta_md_id as karta, deck_md_id as deck
    FROM md_obsahuje
)
NATURAL JOIN 
(
  SELECT pocet as pocet_sb, karta_sb_id as karta, deck_sb_id as deck
  FROM sb_obsahuje 
)
JOIN mtg_karta ON id = karta ;

</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Vsechny karty s jejich poctem vyskytu v maindecich</para>
          </popis_dotazu>

          <sql>SELECT * 
FROM mtg_karta 
LEFT OUTER JOIN md_obsahuje ON md_obsahuje.karta_md_id = mtg_karta.id
ORDER BY jmeno;</sql>

          <comment>
            <para>karty, ktere se vyskytuji 0 x budou mit vyskyt NULL</para>
          </comment>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Jmena, pocet a pocet karet v side u karet, ktere jsou v
            sideboardu i maindecku.</para>
          </popis_dotazu>

          <relacni_algebra>md := md_obsahuje
sb := sb_obsahuje
k=:mtg_karta
{{{md x sb} ( md.karta_md_id=sb.karta_sb_id AND md.deck_md_id = sb.deck_sb_id )}
[karta_md_id=id]  k  [md.karta_md_id,barta_sb_id, md.pocet, sb_pocet,deck]} [jmeno, pocet, sb_pocet, deck]</relacni_algebra>

          <sql>SELECT jmeno, pocet, sb_pocet,  deck 
FROM 
(
    SELECT md.karta_md_id, karta_sb_id,  md.pocet, sb.pocet as sb_pocet, deck_sb_id as deck
    FROM md_obsahuje md CROSS JOIN sb_obsahuje sb
    WHERE (md.karta_md_id = sb.karta_sb_id AND md.deck_md_id = sb.deck_sb_id)
) 
JOIN mtg_karta k ON k.id=karta_md_id ;</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Id decku s jmenem Grimlong.</para>
          </popis_dotazu>

          <relacni_algebra>deck (jmeno='Grimlong') [id]</relacni_algebra>

          <sql>SELECT id FROM deck WHERE jmeno='Grimlong';</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Jmena karet, ktere jsou v maindecku balicku s jmenem
            Grimlong (v pripade vice takovych balicku ten s nejmensim
            id).</para>
          </popis_dotazu>

          <sql>SELECT DISTINCT jmeno 
FROM 
(
    SELECT karta_md_id AS karta 
    FROM md_obsahuje 
    WHERE deck_md_id = (
        SELECT min(id) 
         FROM deck 
        WHERE jmeno='Grimlong'
      )
)
JOIN mtg_karta ON karta = id
ORDER BY jmeno;</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Jmena karet, ktere jsou i v maindecku i sideboardu daneho
            balicku</para>
          </popis_dotazu>

          <relacni_algebra></relacni_algebra>

          <sql>SELECT jmeno FROM 
(
    SELECT karta_md_id as karta, deck_md_id as deck 
    FROM md_obsahuje 
      INTERSECT
    SELECT karta_sb_id as karta, deck_sb_id as deck 
    FROM sb_obsahuje
)
JOIN mtg_karta ON  karta = id;
</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>To same pres CROSS JOIN</para>
          </popis_dotazu>

          <sql>SELECT jmeno FROM 
(
    SELECT md.karta_md_id, karta_sb_id,  md.pocet, sb.pocet AS sb_pocet, deck_sb_id AS deck
    FROM md_obsahuje md CROSS JOIN sb_obsahuje sb
    WHERE (md.karta_md_id = sb.karta_sb_id AND md.deck_md_id = sb.deck_sb_id)
) 
JOIN mtg_karta k ON k.id=karta_md_id ;
</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>to same pres NATURAL JOIN</para>
          </popis_dotazu>

          <sql>SELECT jmeno FROM 
(
    (
      SELECT karta_md_id as karta, deck_md_id AS deck 
      FROM md_obsahuje
    ) 
        NATURAL JOIN
    (
      SELECT karta_sb_id as karta, deck_sb_id AS deck
      FROM sb_obsahuje
    )
)
JOIN mtg_karta k ON k.id=karta;

</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Upravi pocet karet Force of Will v maindecku na 4 (upravi v
            tabulce md_obsahuje pocet karet Force of Will na 4).</para>
          </popis_dotazu>

          <sql>update md_obsahuje 
set pocet = 
    4
where (karta_md_id = select (id) from mtg_karta k where k.jmeno = 'Force of Will');

commit;</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Vlozi do databaze Cernou kartu s nazvem Demonic Tutor, typem
            sorcery, casting costem 1B, id 15</para>
          </popis_dotazu>

          <sql>INSERT INTO mtg_karta (barva_kart_id,typ_karta_id,casting_cost,jmeno,id)
VALUES (
          (
            SELECT (ID) FROM barva WHERE (nazev='black')
          ),
          (
            SELECT (id) FROM typ WHERE (nazev='sorcery'))
            , '1B', 'Demonic Tutor',15);

COMMIT;</sql>

          <comment>
            <para>barva.nazev , typ.nazev jsou unique. Pokud by nebyly, musi se pouzit agregacni funkce max nebo min nebo jinak osetrit, ze vybrane id bude jedno.</para>
          </comment>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>karty, ktere nejsou v maindecku zadneho balicku</para>
          </popis_dotazu>

          <sql>SELECT * 
FROM mtg_karta 
WHERE NOT EXISTS 
(
  SELECT * 
  FROM md_obsahuje 
  WHERE mtg_karta.id=md_obsahuje.karta_md_id
)
order by jmeno;</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Smaze cerne karty.</para>
          </popis_dotazu>

          <sql>DELETE FROM mtg_karta 
WHERE barva_kart_id = 
(
      SELECT id 
      FROM barva 
      WHERE nazev = 'black'
);
</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Seznam karet, ktere se hraji v maindecku, s poctem balicku,
            v nichz se vyskytuji v maindecku.</para>
          </popis_dotazu>

          <sql>SELECT jmeno, COUNT(jmeno) AS pocet_balicku
FROM 
(
      md_obsahuje 
      JOIN mtg_karta ON mtg_karta.id = karta_md_id
)
GROUP BY jmeno;</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Seznam karet s pocet hranych kopii karty v maindecku</para>
          </popis_dotazu>

          <sql>SELECT jmeno, SUM(COALESCE(pocet,0)) AS pocet_kopii
FROM 
(
      mtg_karta 
      LEFT OUTER JOIN md_obsahuje ON mtg_karta.id = karta_md_id
)
GROUP BY jmeno;</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Cerne karty s poctem kopii v maindeccich balicku 2 a
            vice</para>
          </popis_dotazu>

          <sql>SELECT jmeno, SUM (COALESCE(pocet,0)) AS pocet
FROM
(
mtg_karta 
      LEFT OUTER JOIN md_obsahuje ON mtg_karta.id = karta_md_id
)
WHERE barva_kart_id = (SELECT id FROM barva WHERE nazev='black')
GROUP BY jmeno
HAVING SUM (COALESCE(pocet,0)) &gt;1
ORDER by jmeno;</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Cerny Enchantmenty s casting costem.</para>
          </popis_dotazu>

          <sql>CREATE OR REPLACE VIEW cerny_enchantmenty AS 
SELECT JMENO, id, CASTING_COST 
FROM 
    (
       SELECT barva.ID AS barva_id, barva.nazev AS barva_nazev 
       FROM barva
    ) 
     JOIN 
       MTG_KARTA ON (BARVA_ID=BARVA_KART_ID)
     JOIN 
       (SELECT id AS typ_id, nazev AS TYP_NAZEV FROM TYP) ON (typ_karta_id = typ_id) 
   WHERE (barva_nazev = 'black' AND TYP_NAZEV = 'enchantment');

select * from cerny_enchantmenty;
</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Karty s casting costem jako enchantment s nejnizsim
            id.</para>
          </popis_dotazu>

          <sql>SELECT * 
FROM MTG_karta 
WHERE CASTING_COST = 
   (
      SELECT CASTING_COST 
      FROM cerny_enchantmenty 
      WHERE id=
           (
              SELECT min(id) 
              FROM cerny_enchantmenty 
           )
   );
</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Turnaje, na kterých hrály všichni hráči.</para>
          </popis_dotazu>

          <relacni_algebra>t1:=turnaj;
t1[turnaj_id] - A
A= Turnaj (id -&gt;turnaj_id )[turnaj_id] - ( Turnaj (id -&gt; turnaj_id)[ turnaj_id ] x hrac [ osoba_id ] - 
HDNT ( hrac_id -&gt; osoba_id )[ turnaj_id, osoba_id ] )[ turnaj_id ] </relacni_algebra>

          <sql>SELECT id as turnaj_id 
FROM turnaj 
    MINUS
SELECT turnaj_id 
FROM 
(
  SELECT osoba_id, id as turnaj_id FROM turnaj CROSS JOIN HRAC
      MINUS 
  SELECT hrac_id AS osoba_id,turnaj_id FROM Hral_deck_na_turnaji 
);</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Nazvy formatu, jez jsou hrany na turnajich</para>
          </popis_dotazu>

          <relacni_algebra>turnaj * (format (id -&gt; form_turna_id, nazev -&gt; format_nazev)) [format_nazev]</relacni_algebra>

          <sql>SELECT DISTINCT format_nazev 
FROM TURNAJ NATURAL JOIN (SELECT id as form_turna_id, nazev as format_nazev FROM FORMAT); 
</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>. Id cernych enchantmentu</para>
          </popis_dotazu>

          <sql>select id FROM cerny_enchantmenty;
</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Zapasy, ktere skoncili 1:1.</para>
          </popis_dotazu>

          <relacni_algebra>ZAPAS (vysl_zapas_hrac_1_vyhral_her = 1 AND vysl_zapas_hrac_2_vyhral_her = 1)</relacni_algebra>

          <sql>SELECT * FROM ZAPAS
 WHERE (vysl_zapas_hrac_1_vyhral_her = 1 AND vysl_zapas_hrac_2_vyhral_her = 1);</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Počet zařazení karty Brainstorm do balíčku.</para>
          </popis_dotazu>

          <sql>SELECT count(*) 
FROM md_obsahuje 
WHERE 
  (
     karta_md_id=(SELECT id FROM mtg_karta WHERE jmeno = 'Brainstorm')
  ); 
</sql>

          <comment>
            <para>Nepočítají se kopie, ale jen použití karty v různých decích.</para>
          </comment>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Hrace s jmenem Martin.</para>
          </popis_dotazu>

          <relacni_algebra>(OSOBA [id=osoba_id] HRAC ) (jmeno='Martin')</relacni_algebra>

          <sql>SELECT *
FROM OSOBA JOIN HRAC ON (id=osoba_id) 
WHERE jmeno ='Martin'</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>balicky typu aggro.</para>
          </popis_dotazu>

          <relacni_algebra>(deck [druh_deck_id=id]druh )( nazev= aggro)</relacni_algebra>

          <sql>SELECT * FROM deck JOIN druh ON (druh.id=druh_deck_id) where nazev = 'aggro';
 </sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Zmeni jmeno na krestni prednasejiciho DBS u naseho
            spoluzaka.</para>
          </popis_dotazu>

          <sql>UPDATE osoba set jmeno = 'Michal' WHERE (jmeno = 'Pavel' AND prijmeni = 'Valenta');
commit;</sql>
        </dotaz>

        <dotaz>
          <popis_dotazu>
            <para>Vanocni insert.</para>
          </popis_dotazu>

          <sql>INSERT INTO OSOBA (id, prijmeni, jmeno)values ((SELECT max (id) FROM OSOBA)+1, 'Klaus', 'SANTA');
commit;
</sql>
        </dotaz>
      </dotazy>

      <pokryti_dotazu>
        <kategorie_dotazu>
          <entry>A</entry>

          <entry>1, 2, 13, 30, 32</entry>

          <entry>jednoduché dotazy (SELECT ... FROM ... WHERE)</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>B</entry>

          <entry>1, 2</entry>

          <entry>Vyber všechny, pro něž platí, že...</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>C</entry>

          <entry>3,4,5</entry>

          <entry>Vyber všechny, pro něž NEplatí, že...</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>D</entry>

          <entry>27</entry>

          <entry>Vyber ty, pro něž všechny...</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>E</entry>

          <entry>20</entry>

          <entry>Vyber ty, pro něž žádné...</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>F1</entry>

          <entry>6, 7, 10, 14, 16, 22, 32</entry>

          <entry>spojení - JOIN ON</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>F2</entry>

          <entry>10, 17, 28</entry>

          <entry>spojení - NATURAL JOIN | JOIN USING</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>F3</entry>

          <entry>9, 12, 16</entry>

          <entry>spojení - CROSS JOIN</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>F4</entry>

          <entry>23, 24</entry>

          <entry>polospojení (vnější) - LEFT | RIGHT OUTER JOIN</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>F5</entry>

          <entry>11</entry>

          <entry>plné (vnější) spojení - FULL (OUTER) JOIN</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>G1</entry>

          <entry>14</entry>

          <entry>vnořený dotaz v klauzuli WHERE</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>G2</entry>

          <entry>12, 17</entry>

          <entry>vnořený dotaz v klauzuli FROM</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>G3</entry>

          <entry>10</entry>

          <entry>vnořený dotaz v klauzuli SELECT</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>G4</entry>

          <entry>20</entry>

          <entry>vztažený vnořený dotaz (EXISTS | NOT EXISTS)</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>H1</entry>

          <entry>8</entry>

          <entry>množinové sjednocení - UNION</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>H2</entry>

          <entry>3</entry>

          <entry>množinový rozdíl - MINUS (v Oracle)</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>H3</entry>

          <entry>15</entry>

          <entry>množinový průnik - INTERSECT</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>I1</entry>

          <entry>14, 31</entry>

          <entry>agregační funkce (count | sum | min | max| avg)</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>I2</entry>

          <entry>22, 23, 24</entry>

          <entry>agregační funkce nad seskupenými řádky - GROUP BY
          (HAVING)</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>J</entry>

          <entry>3 + 4 + 5, 15+16 + 17</entry>

          <entry>stejný dotaz ve třech různých formulacích SQL</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>K</entry>

          <entry>24</entry>

          <entry>všechny klauzule - SELECT FROM WHERE GROUP BY HAVING ORDER
          BY</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>L</entry>

          <entry>25</entry>

          <entry>pohled VIEW</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>M</entry>

          <entry>26, 29</entry>

          <entry>dotaz nad pohledem</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>L</entry>

          <entry>19, 35</entry>

          <entry>INSERT .... SELECT příkaz</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>M</entry>

          <entry>18, 34</entry>

          <entry>UPDATE s vnořeným SELECT příkazem</entry>
        </kategorie_dotazu>

        <kategorie_dotazu>
          <entry>N</entry>

          <entry>21</entry>

          <entry>DELETE s vnořeným SELECT příkazem</entry>
        </kategorie_dotazu>
      </pokryti_dotazu>

      <comment></comment>
    </queries>

    <scripts>
      <title>Skripty</title>

      <para>Zdroj pro ER-modelář - <link url="pevecky_sbor.xml">mtg_turnaj v
      7alt.xml</link></para>

      <para>Skript pro vytvoření databáze - mtg_turnaj v 7alt.sql </para>

      <para>Skript pro vložení dat do databáze - <link
      url="data.sql">vlozenadata.sql</link></para>

      <para>Skript s SQL dotazy, který je možné přímo spustit - <link
      url="dotazy.sql">dotazy.sql</link></para>
    </scripts>

    <conclussions>
      <title>Závěr</title>

      <para>Úspěšně jsem vytvořil svůj první databázový projekt a osvojil jsem
      si základní metody databázového návrhu. Vzniklé databázi lze jistě
      vytknout řadu nedostatků. Ty pramení zejména z toho, že v době vytváření
      ER schématu jsem neměl jasnou představu o některých implementačních
      problémech souvisejících např. se spojováním tabulek. Databáze se
      průběhem času měnila a její vývoj zastavuje až koncem semestru.</para>
    </conclussions>

    <references>
      <title>Odkazy</title>

      <para>[1] Skopal, Tomáš Databázové systémy</para>

      <comment>
        <para>siret.ms.mff.cuni.cz/skopal/databaze/slidy/DBI025_01.ppt</para>
      </comment>

      <para>[2] J.Mikulecká, FIM UHK, 2004</para>

      <comment>
        <para>http://uhk.xichtik.net/download.php?id=175&amp;sid=063f79d6905ad83c55efb04804ef9a04</para>
      </comment>
    </references>
  </content>
</sproject>
