#BlueJ class context
comment0.target=SpravcePlatna()
comment0.text=\nVytvori\ instanci\ tridy\ -\ je\ volana\ pouze\ jednou.\n\n
comment1.target=SpravcePlatna\ getInstance()
comment1.text=\nJedina\ metoda\ umoznujici\ ziskat\ odkaz\ na\ instanci\ platna.\nVraci\ vsak\ pokazde\ odkaz\ na\ stejnou\ instanci,\nprotoze\ instance\ platna\ je\ jedinacek.\n<p>\nPokud\ instance\ pri\ volani\ metody\ jeste\ neexistuje,\nmetoda\ instanci\ vytvori.</p>\n\n@return\ Instance\ tridy\ SpravcePlatna\n\n
comment10.target=Rozmer\ getRozmer()
comment10.text=\nVrati\ polickovy\ rozmer\ platna,\ tj.\ sirku\ a\ vysku\ v\ polich.\n\n@return\ \ Aktualni\ polickovy\ rozmer\ platna\n\n
comment11.params=sirka\ vyska
comment11.target=void\ setRozmer(int,\ int)
comment11.text=\nNastavi\ rozmer\ platna\ zadanim\ jeho\ polickove\ vysky\ a\ sirky.\n\n@param\ \ sirka\ \ Novy\ pocet\ policek\ vodorovne\n@param\ \ vyska\ \ Novy\ pocet\ policek\ svisle\n\n
comment12.params=rozmer
comment12.target=void\ setRozmer(Rozmer)
comment12.text=\nNastavi\ rozmer\ platna\ zadanim\ jeho\ polickove\ vysky\ a\ sirky.\n\n@param\ \ rozmer\ \ Zadavany\ rozmer\ v\ poctu\ policek\n\n
comment13.target=boolean\ isMrizka()
comment13.text=\nVrati\ informaci\ o\ tom,\ je-li\ zobrazovana\ mrizka.\n\n@return\ Mrizka\ je\ zobrazovana\ \=\ true,\ neni\ zobrazovana\ \=\ false.\n\n
comment14.params=zobrazit
comment14.target=void\ setMrizka(boolean)
comment14.text=\nV\ zavislosti\ na\ hodnte\ parametru\ nastavi\ nebo\ potlaci\nzobrazovani\ car\ mrizky.\n\n@param\ zobrazit\ \ Jestli\ mrizku\ zobrazovat.\n\n
comment15.target=boolean\ isViditelne()
comment15.text=\nPoskytuje\ informaci\ o\ aktualni\ viditelnosti\ okna.\n\n@return\ Je-li\ okno\ viditelne,\ vraci\ <b>true</b>,\ jinak\ vraci\ <b>false</b>\n\n
comment16.params=viditelne
comment16.target=void\ setViditelne(boolean)
comment16.text=\nV\ zavislosti\ na\ hodnte\ parametru\ nastavi\ nebo\ potlaci\ viditelnost\ platna.\n\n@param\ viditelne\ logicka\ hodnota\ pozadovane\ viditelnost\ (true\=viditelne)\n\n
comment17.target=Barva\ getBarvaPozadi()
comment17.text=\nVrati\ aktualni\ barvu\ pozadi.\n\n@return\ \ Nastavena\ barva\ pozadi\n\n
comment18.params=barva
comment18.target=void\ setBarvaPozadi(Barva)
comment18.text=\nNastavi\ pro\ platno\ barvu\ pozadi.\n\n@param\ \ barva\ \ Nastavovana\ barva\ pozadi\n\n
comment19.target=int\ getNekresli()
comment19.text=\nPomocna\ metoda\ pro\ ucely\ ladeni\ aby\ bylo\ mozno\ zkontrolovat,\nze\ na\ konci\ metody\ ma\ semafor\ stejnou\ hodnotu,\ jako\ mel\ na\ pocatku.\n\n@return\ \ Stav\ vnitrniho\ semaforu\:\ >0\ \ -\ nebude\ se\ kreslit,<br>\n\=\=0\ -\ kresli\ se,<br>\n<0\ \ -\ chyba\n\n
comment2.params=krok\ pSirka\ pVyska
comment2.target=void\ setKrokRozmer(int,\ int,\ int)
comment2.text=\nNastavi\ rozmer\ platna\ zadanim\ bodove\ velikosti\ policka\ a\npoctu\ policek\ ve\ vodorovnem\ a\ svislem\ smeru.\nPri\ velikosti\ policka\ \=\ 1\ se\ vypina\ zobrazovani\ mrizky.\n\n@param\ \ krok\ \ \ \ Nova\ bodova\ velikost\ policka\n@param\ \ pSirka\ \ Novy\ pocet\ policek\ vodorovne\n@param\ \ pVyska\ \ Novy\ pocet\ policek\ svisle\n\n
comment20.target=String\ getNazev()
comment20.text=\nVrati\ aktualni\ nazev\ v\ titulkove\ liste\ okna\ platna.\n\n@return\ \ Aktualni\ nazev\ okna\n\n
comment21.params=nazev
comment21.target=void\ setNazev(String)
comment21.text=\nNastavi\ nazev\ v\ titulkove\ liste\ okna\ platna.\n\n@param\ nazev\ \ Nastavovany\ nazev\n\n
comment22.target=Pozice\ getPozice()
comment22.text=\nVrati\ vodorovnou\ soradnici\ aplikacniho\ okna\ platna.\n\n@return\ Pozice\ leveho\ horniho\ rohu\ aplikacniho\ okna\ platna.\n\n
comment23.params=x\ y
comment23.target=void\ setPozice(int,\ int)
comment23.text=\nNastavi\ pozici\ aplikacniho\ okna\ aktivniho\ platna\ na\ obrazovce.\n\n@param\ x\ \ Vodorovna\ soradnice\ aplikacniho\ okna\ platna.\n@param\ y\ \ Svisla\ soradnice\ aplikacniho\ okna\ platna.\n\n
comment24.params=pozice
comment24.target=void\ setPozice(Pozice)
comment24.text=\nNastavi\ pozici\ aplikacniho\ okna\ aktivniho\ platna\ na\ obrazovce.\n\n@param\ pozice\ \ Pozadovana\ pozice\ aplikacniho\ okna\ platna\ na\ obrazovce.\n\n
comment25.target=String\ toString()
comment26.target=void\ prekresli()
comment26.text=\nVykresli\ vsechny\ elementy.\n\n
comment27.target=void\ nekresli()
comment27.text=\nPotlaci\ prekreslovani\ platna,\ presneji\ zvysi\ hladinu\ potlaceni\nprekreslovani\ o\ jednicku.\ Navratu\ do\ stavu\ pred\ volanim\ teto\ metody\nse\ dosahne\ zavolanim\ metody\ <code>vratKresli()</code>.</p>\n<p>\nMetody\ <code>nekresli()</code>\ a\ <code>vratKresli()</code>\nse\ tak\ chovaji\ obdobne\ jako\ zavorky,\ mezi\ nimiz\ je\ vykreslovani\npotlaceno.</p>\n\n
comment28.target=void\ vratKresli()
comment28.text=\nVrati\ prekreslovani\ do\ stavu\ pred\ poslednim\ volanim\ metody\n<code>nekresli()</code>.\ Predchazelo-li\ proto\ vice\ volani\ metody\n<code>nekresli()</code>,\ zacne\ se\ prekreslovat\ az\ po\ odpovidajim\ poctu\nzavolani\ metody\ <code>vratKresli()</code>.\n\n@throws\ IllegalStateException\nJe-li\ metoda\ volana\ aniz\ by\ predchazelo\ odpovidajici\ volani\n<code>nekresli()</code>.\n\n
comment29.params=obrazec
comment29.target=boolean\ odstran(IKresleny)
comment29.text=\nOdstrani\ zadany\ obrazec\ ze\ seznamu\ malovanych.\nByl-li\ obrazec\ v\ seznamu,\ prekresli\ platno.\n\n@param\ obrazec\ \ Odstranovany\ obrazec\n\n@return\ \ true\ v\ pripade,\ kdyz\ obrazec\ v\ seznamu\ byl,\nfalse\ v\ pripade,\ kdyz\ nebylo\ co\ odstranovat\n\n
comment3.params=krok\ pSirka\ pVyska\ menic
comment3.target=void\ setKrokRozmer(int,\ int,\ int,\ Object)
comment3.text=\nNastavi\ rozmer\ platna\ zadanim\ bodove\ velikosti\ policka\ a\npoctu\ policek\ ve\ vodorovnem\ a\ svislem\ smeru.\nPri\ velikosti\ policka\ \=\ 1\ se\ vypina\ zobrazovani\ mrizky.\n\n@param\ \ krok\ \ \ \ Nova\ bodova\ velikost\ policka\n@param\ \ pSirka\ \ Novy\ pocet\ policek\ vodorovne\n@param\ \ pVyska\ \ Novy\ pocet\ policek\ svisle\n@param\ \ menic\ \ \ Objekt,\ ktery\ zada\ o\ zmenu\ rozmeru.\ Jakmile\ je\ jednou\ntento\ objekt\ nastaven,\ nesmi\ jiz\ rozmer\ platna\nmenit\ nikdo\ jiny.\n\n
comment30.target=void\ odstranVse()
comment30.text=\nVycisti\ platno,\ tj.\ vyprazdni\ seznam\ malovanych\n(odstrani\ z\ nej\ vsechny\ obrazce).\n\n
comment31.params=obrazec
comment31.target=int\ pridej(IKresleny\ ...)
comment31.text=\nNeni-li\ zadany\ obrazec\ v\ seznamu\ malovanych,\ prida\ jej\ na\ konec\n(bude\ se\ kreslit\ jako\ posledni,\ tj.\ na\ vrchu.\nByl-li\ obrazec\ opravdu\ pridan,\ prekresli\ platno.\nObjekty\ budou\ vzdy\ kresleny\ v\ poradi,\ v\ nemz\ byly\ pridany\ do\ spravy,\ntj.\ v\ seznamu\ parametru\ zleva\ doprava\na\ drive\ zaregistrovane\ objekty\ pred\ objekty\ zaregistrovanymi\ pozdeji.\n\n@param\ \ obrazec\ \ Pridavane\ obrazce\n@return\ \ Pocet\ skutecne\ pridanych\ obrazcu\n\n
comment32.params=soucasny\ pridany
comment32.target=boolean\ pridejNad(IKresleny,\ IKresleny)
comment32.text=\nPrida\ obrazec\ do\ seznamu\ malovanych\ tak,\ aby\ byl\ kreslen\nnad\ zadanym\ obrazcem.\nPokud\ jiz\ v\ seznamu\ byl,\ jenom\ jej\ presune\ do\ zadane\ pozice.\n\n@param\ \ soucasny\ \ Obrazec,\ ktery\ ma\ byt\ pri\ kresleni\ pod\npridavanym\ obrazcem\n@param\ \ pridany\ \ \ Pridavany\ obrazec\n\n@return\ \ true\ \ v\ pripade,\ kdyz\ byl\ obrazec\ opravdu\ pridan,\nfalse\ v\ pripade,\ kdyz\ jiz\ mezi\ zobrazovanymi\ byl\na\ pouze\ se\ presunul\ do\ jine\ urovne\n\n
comment33.params=soucasny\ pridany
comment33.target=boolean\ pridejPod(IKresleny,\ IKresleny)
comment33.text=\nPrida\ obrazec\ do\ seznamu\ malovanych\ tak,\ aby\ byl\ kreslen\npod\ zadanym\ obrazcem.\nPokud\ jiz\ v\ seznamu\ byl,\ jenom\ jej\ presune\ do\ zadane\ pozice.\n\n@param\ \ soucasny\ \ Obrazec,\ ktery\ ma\ byt\ pri\ kresleni\ nad\npridavanym\ obrazcem\n@param\ \ pridany\ \ \ Pridavany\ obrazec\n\n@return\ \ true\ \ v\ pripade,\ kdyz\ byl\ obrazec\ opravdu\ pridan,\nfalse\ v\ pripade,\ kdyz\ jiz\ mezi\ zobrazovanymi\ byl\na\ pouze\ se\ presunul\ do\ jine\ urovne\n\n
comment34.params=pridany
comment34.target=boolean\ pridejNavrch(IKresleny)
comment34.text=\nPrida\ obrazec\ do\ seznamu\ malovanych\ tak,\ aby\ byl\ kreslen\nnad\ vsemi\ obrazci.\nPokud\ jiz\ v\ seznamu\ byl,\ jenom\ jej\ presune\ do\ pozadovane\ pozice.\n\n@param\ \ pridany\ \ \ Pridavany\ obrazec\n\n@return\ \ true\ \ v\ pripade,\ kdyz\ byl\ obrazec\ opravdu\ pridan,\nfalse\ v\ pripade,\ kdyz\ jiz\ mezi\ zobrazovanymi\ byl\na\ pouze\ se\ presunul\ do\ jine\ urovne\n\n
comment35.params=pridany
comment35.target=boolean\ pridejDospod(IKresleny)
comment35.text=\nPrida\ obrazec\ do\ seznamu\ malovanych\ tak,\ aby\ byl\ kreslen\npod\ zadanym\ obrazcem.\nPokud\ jiz\ v\ seznamu\ byl,\ jenom\ jej\ presune\ do\ zadane\ pozice.\n\n@param\ \ pridany\ \ \ Pridavany\ obrazec\n\n@return\ \ true\ \ v\ pripade,\ kdyz\ byl\ obrazec\ opravdu\ pridan,\nfalse\ v\ pripade,\ kdyz\ jiz\ mezi\ zobrazovanymi\ byl\na\ pouze\ se\ presunul\ do\ jine\ urovne\n\n
comment36.params=obrazec
comment36.target=int\ poradi(IKresleny)
comment36.text=\nVrati\ poradi\ zadaneho\ prvku\ v\ seznamu\ kreslenych\ prvku.\nPrvky\ se\ pritom\ kresli\ v\ rostoucim\ poradi,\ takze\ obrazec\ns\ vetsim\ poradim\ je\ kreslen\ nad\ obrazcem\ s\ mensim\ poradim.\nNeni-li\ zadany\ obrazec\ mezi\ kreslenymi,\ vrati\ -1.\n\n@param\ \ obrazec\ \ Objekt,\ na\ jehoz\ kreslici\ poradi\ se\ dotazujeme\n\n@return\ \ Poradi\ obrazce;\ prvy\ kresleny\ obrazec\ ma\ poradi\ 0.\nNeni-li\ zadany\ obrazec\ mezi\ kreslenymi,\ vrati\ -1.\n\n
comment37.target=List<IKresleny>\ seznamKreslenych()
comment37.text=\nVrati\ nemodifikovatelny\ seznam\ vsech\ spravovanych\ obrazku.\n\n@return\ \ Pozadovany\ seznam\n\n
comment38.params=posluchac
comment38.target=void\ prihlasKlavesnici(KeyListener)
comment38.text=\nPrihlasi\ posluchace\ udalosti\ klavesnice.\n\n@param\ posluchac\ \ Prihlasovany\ posluchac\n\n
comment39.params=posluchac
comment39.target=void\ odhlasKlavesnici(KeyListener)
comment39.text=\nOdhlasi\ posluchace\ klavesnice.\n\n@param\ posluchac\ \ Odhlasovany\ posluchac\n\n
comment4.target=int\ getKrok()
comment4.text=\nVrati\ vzdalenost\ car\ mrizky\ \=\ bodovou\ velikost\ policka.\n\n@return\ Bodova\ velikost\ policka\n\n
comment40.params=posluchac
comment40.target=void\ prihlasMys(MouseListener)
comment40.text=\nPrihlasi\ posluchace\ udalosti\ mysi.\n\n@param\ posluchac\ \ Prihlasovany\ posluchac\n\n
comment41.params=posluchac
comment41.target=void\ odhlasMys(MouseListener)
comment41.text=\nOdhlasi\ posluchace\ mysi.\n\n@param\ posluchac\ \ Odhlasovany\ posluchac\n\n
comment42.target=void\ inicializace()
comment42.text=\nInicializuje\ nektere\ parametry\ z\ konfiguracniho\ souboru.\nTento\ soubor\ je\ umisten\ v\ domovskem\ adresari\ uzivatele\nve\ slozce\ {@code\ .rup}\ v\ souboru\ {@code\ bluej.properties}.\n\n
comment43.target=void\ pripravCary()
comment43.text=\nPripravi\ cary\ vyznacujici\ jednotliva\ pole\ aktivniho\ platna.\nPokud\ se\ cary\ kreslit\ nemaji,\ vyprazdni\ odkazy\ na\ ne.\n\n
comment5.params=velikost
comment5.target=void\ setKrok(int)
comment5.text=\nNastavi\ vzdalenost\ car\ mrizky\ \=\ bodovou\ velikost\ policka.\nPri\ velikosti\ policka\ \=\ 1\ se\ vypina\ zobrazovani\ mrizky.\n\n@param\ velikost\ \ Nova\ bodova\ velikost\ policka\n\n
comment6.target=int\ getSloupcu()
comment6.text=\nVrati\ pocet\ sloupcu\ platna,\ tj.\ jeho\ polickovou\ sirku.\n\n@return\ \ Aktualni\ polickova\ sirka\ platna\ (pocet\ policek\ vodorovne)\n\n
comment7.target=int\ getBsirka()
comment7.text=\nVrati\ bodovou\ sirku\ platna.\n\n@return\ \ Aktualni\ bodova\ sirka\ platna\ (pocet\ bodu\ vodorovne)\n\n
comment8.target=int\ getRadku()
comment8.text=\nVrati\ pocet\ radku\ platna,\ tj.\ jeho\ polickovou\ vysku.\n\n@return\ \ Aktualni\ polickova\ vyska\ platna\ (pocet\ policek\ svisle)\n\n
comment9.target=int\ getBVyska()
comment9.text=\nVrati\ bodovou\ vysku\ platna.\n\n@return\ \ Aktualni\ bodova\ vyska\ platna\ (pocet\ bodu\ svisle)\n\n
numComments=44
