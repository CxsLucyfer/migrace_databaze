
package cz.ctu.fee.murinrad.ifaceserver;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Calendar;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.3.1
 * Sun Dec 09 23:32:36 CET 2012
 * Generated source version: 2.3.1
 * 
 */

public final class DemoRunner {

    private static final QName SERVICE_NAME = new QName("http://interfaceserver.murinrad.fee.ctu.cz/", "InterfaceServiceService");

    private DemoRunner() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = InterfaceServiceService.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        InterfaceServiceService ss = new InterfaceServiceService(wsdlURL, SERVICE_NAME);
        InterfaceServiceIface port = ss.getInterfaceServicePort();  
     Integer flightNo = null, newFlightNo = null, seatNo = null, newSeatNo = null, ticketNo = null;
        Passenger p = new Passenger();
        p.setIdDocNumber("SN123456");
        p.setName("Radovan");
        p.setSurname("Murin");
        p.setSex("M");
        p.setTitle("Mr.");
      










        System.out.println("Invoking findFlight...");
        java.lang.String _findFlight_arrivalAPT = "KSC";
        java.lang.String _findFlight_destinationAPT = "PRG";
        Calendar c = Calendar.getInstance();
        c.clear();
        c.set(2012, 11, 24);
        java.lang.Long _findFlight_arrivalTime = null;
        java.lang.Long _findFlight_departureTime = c.getTimeInMillis();
        try {
            cz.ctu.fee.murinrad.ifaceserver.FlightCollection ret = port.findFlight(_findFlight_arrivalAPT, _findFlight_destinationAPT, _findFlight_arrivalTime, _findFlight_departureTime);
            flightNo = ret.flights.get(0).id;
            newFlightNo = ret.flights.get(1).id;


        } catch (SearchException_Exception e) {
            System.out.println("Expected exception: SearchException has occurred.");
            System.out.println(e.toString());
        }





        System.out.println("Invoking getFreeSeatsForFlight...");

        try {
            cz.ctu.fee.murinrad.ifaceserver.SeatCollection sc = port.getFreeSeatsForFlight(flightNo);
            System.out.println("getFreeSeatsForFlight.result=" + sc);
            seatNo = sc.content.get(0).seatNo;
            sc = port.getFreeSeatsForFlight(newFlightNo);
            newSeatNo = sc.content.get(0).seatNo;

        } catch (SearchException_Exception e) {
            System.out.println("Expected exception: SearchException has occurred.");
            System.out.println(e.toString());
        }


        {
            System.out.println("Invoking bookFlight...");
            try {
                cz.ctu.fee.murinrad.ifaceserver.Ticket _bookFlight__return = port.bookFlight(p, flightNo, seatNo);
                System.out.println("bookFlight.result=" + _bookFlight__return);
                ticketNo = _bookFlight__return.ticketNumber;

            } catch (ReservationException_Exception e) {
                System.out.println("Expected exception: ReservationException has occurred.");
                System.out.println(e.toString());
            }
        }

        {
            System.out.println("Invoking bookFlight...");
            try {
                cz.ctu.fee.murinrad.ifaceserver.Ticket _bookFlight__return = port.bookFlight(p, flightNo, seatNo);
                System.out.println("bookFlight.result=" + _bookFlight__return);

            } catch (ReservationException_Exception e) {
                System.out.println("Expected exception: ReservationException has occurred. should have happened");
                System.out.println(e.toString());
            }
        }



        {
            System.out.println("Invoking cancelReservation...");
            java.lang.String _cancelReservation_passengerIDDocNumber = p.idDocNumber;
            java.lang.Integer _cancelReservation_ticketID = ticketNo;
            try {
                port.cancelReservation(_cancelReservation_passengerIDDocNumber, _cancelReservation_ticketID);

            } catch (CancelReservationException_Exception e) {
                System.out.println("Expected exception: CancelReservationException has occurred.");
                System.out.println(e.toString());
            }
        }

        Ticket t = null;
        {
            System.out.println("Invoking bookFlight...bookung again");
            try {
                cz.ctu.fee.murinrad.ifaceserver.Ticket _bookFlight__return = port.bookFlight(p, flightNo, seatNo);
                System.out.println("bookFlight.result=" + _bookFlight__return);
                t = _bookFlight__return;
                ticketNo = _bookFlight__return.ticketNumber;

            } catch (ReservationException_Exception e) {
                System.out.println("Expected exception: ReservationException has occurred. should have happened");
                System.out.println(e.toString());
            }
        }

        {
            System.out.println("Invoking changeReservation...");

            try {
                t = port.changeReservation(ticketNo, newFlightNo, newSeatNo);
                System.out.println("changeReservation.result=" + t);

            } catch (ChangeReservationException_Exception e) {
                System.out.println("Expected exception: ChangeReservationException has occurred.");
                System.out.println(e.toString());
            }
        }



        {
            System.out.println("Invoking getTicketsPerPassenger...");
            try {
                cz.ctu.fee.murinrad.ifaceserver.TicketPackage _getTicketsPerPassenger__return = port.getTicketsPerPassenger(p.idDocNumber);
                System.out.println("getTicketsPerPassenger.result=" + _getTicketsPerPassenger__return.content.get(0).flightID);

            } catch (SearchException_Exception e) {
                System.out.println("Expected exception: SearchException has occurred.");
                System.out.println(e.toString());
            }
        }




        {
            System.out.println("Invoking payForAReservationCard...");
            cz.ctu.fee.murinrad.ifaceserver.CardData cd = new CardData();
            cd.cvc = 258;
            cd.number = 1234564;
            cd.owner = "Rado Murin";
            cd.expiration = "05/15";

            try {
                cz.ctu.fee.murinrad.ifaceserver.CardPayment _payForAReservationCard__return = port.payForAReservationCard(t.ticketNumber, t.totalPrice, cd);
                System.out.println("payForAReservationCard.result=" + _payForAReservationCard__return.getAmountOver());

            } catch (PaymentException_Exception e) {
                System.out.println("Expected exception: PaymentException has occurred.");
                System.out.println(e.toString());
            }
        }


        System.out.println("Invoking printTicket...");

        try {
            byte[] _printTicket__return = port.printTicket(t.ticketNumber);
            System.out.println("printTicket.result=\n" + new String(_printTicket__return));

        } catch (PrintingException_Exception e) {
            System.out.println("Expected exception: PrintingException has occurred.");
            System.out.println(e.toString());
        }

        System.exit(0);
    }

}
