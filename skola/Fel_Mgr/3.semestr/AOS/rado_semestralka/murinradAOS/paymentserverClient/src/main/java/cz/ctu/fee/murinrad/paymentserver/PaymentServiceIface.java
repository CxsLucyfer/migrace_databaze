
package cz.ctu.fee.murinrad.paymentserver;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6b21 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PaymentServiceIface", targetNamespace = "http://paymentserver.murinrad.fee.ctu.cz/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PaymentServiceIface {


    /**
     * 
     * @param paymentData
     * @return
     *     returns cz.ctu.fee.murinrad.paymentserver.CashPayment
     * @throws DatabaseException_Exception
     * @throws PaymentException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "performCashTransaction", targetNamespace = "http://paymentserver.murinrad.fee.ctu.cz/", className = "cz.ctu.fee.murinrad.paymentserver.PerformCashTransaction")
    @ResponseWrapper(localName = "performCashTransactionResponse", targetNamespace = "http://paymentserver.murinrad.fee.ctu.cz/", className = "cz.ctu.fee.murinrad.paymentserver.PerformCashTransactionResponse")
    @Action(input = "http://paymentserver.murinrad.fee.ctu.cz/PaymentServiceIface/performCashTransactionRequest", output = "http://paymentserver.murinrad.fee.ctu.cz/PaymentServiceIface/performCashTransactionResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://paymentserver.murinrad.fee.ctu.cz/PaymentServiceIface/performCashTransaction/Fault/DatabaseException"),
        @FaultAction(className = PaymentException_Exception.class, value = "http://paymentserver.murinrad.fee.ctu.cz/PaymentServiceIface/performCashTransaction/Fault/PaymentException")
    })
    public CashPayment performCashTransaction(
        @WebParam(name = "paymentData", targetNamespace = "")
        CashPayment paymentData)
        throws DatabaseException_Exception, PaymentException_Exception
    ;

    /**
     * 
     * @param paymentData
     * @return
     *     returns cz.ctu.fee.murinrad.paymentserver.CardPayment
     * @throws DatabaseException_Exception
     * @throws PaymentException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "performCardTransaction", targetNamespace = "http://paymentserver.murinrad.fee.ctu.cz/", className = "cz.ctu.fee.murinrad.paymentserver.PerformCardTransaction")
    @ResponseWrapper(localName = "performCardTransactionResponse", targetNamespace = "http://paymentserver.murinrad.fee.ctu.cz/", className = "cz.ctu.fee.murinrad.paymentserver.PerformCardTransactionResponse")
    @Action(input = "http://paymentserver.murinrad.fee.ctu.cz/PaymentServiceIface/performCardTransactionRequest", output = "http://paymentserver.murinrad.fee.ctu.cz/PaymentServiceIface/performCardTransactionResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://paymentserver.murinrad.fee.ctu.cz/PaymentServiceIface/performCardTransaction/Fault/DatabaseException"),
        @FaultAction(className = PaymentException_Exception.class, value = "http://paymentserver.murinrad.fee.ctu.cz/PaymentServiceIface/performCardTransaction/Fault/PaymentException")
    })
    public CardPayment performCardTransaction(
        @WebParam(name = "paymentData", targetNamespace = "")
        CardPayment paymentData)
        throws DatabaseException_Exception, PaymentException_Exception
    ;

    /**
     * 
     * @param paymentData
     * @return
     *     returns cz.ctu.fee.murinrad.paymentserver.BankPayment
     * @throws DatabaseException_Exception
     * @throws PaymentException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "performBankTransaction", targetNamespace = "http://paymentserver.murinrad.fee.ctu.cz/", className = "cz.ctu.fee.murinrad.paymentserver.PerformBankTransaction")
    @ResponseWrapper(localName = "performBankTransactionResponse", targetNamespace = "http://paymentserver.murinrad.fee.ctu.cz/", className = "cz.ctu.fee.murinrad.paymentserver.PerformBankTransactionResponse")
    @Action(input = "http://paymentserver.murinrad.fee.ctu.cz/PaymentServiceIface/performBankTransactionRequest", output = "http://paymentserver.murinrad.fee.ctu.cz/PaymentServiceIface/performBankTransactionResponse", fault = {
        @FaultAction(className = DatabaseException_Exception.class, value = "http://paymentserver.murinrad.fee.ctu.cz/PaymentServiceIface/performBankTransaction/Fault/DatabaseException"),
        @FaultAction(className = PaymentException_Exception.class, value = "http://paymentserver.murinrad.fee.ctu.cz/PaymentServiceIface/performBankTransaction/Fault/PaymentException")
    })
    public BankPayment performBankTransaction(
        @WebParam(name = "paymentData", targetNamespace = "")
        BankPayment paymentData)
        throws DatabaseException_Exception, PaymentException_Exception
    ;

}
